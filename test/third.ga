# Expression Examples

const x = clone Object {
	number = 10,
	another = "Hello",
	callme = method () {
		let x = 10;
		x;
	}
};

let y = x->callme();

fmt->log(y);

const operation = clone Object {
	loop = method () {
		for (let i = 0; i < 10; ++i) {
			fmt->log(i);

			if (i <= 5) {
				fmt->log("Hello");
				continue;
			};
	
			fmt->log("GreaterThan 5");
	
			if (i == 6) {
				fmt->log("i is equal to 6!");
				fmt->log("Something cool: ", i);
				return i;
			};
		};
	},
	vec1 = vector,
	populate = method () {
		fmt->print(this);
		this->vec1->push(123);	
	}
};

const result = operation->loop();

fmt->log("Loop Result: ", result);

operation->populate();

# fmt->log(operation->vec1->get());


const greet = "Hallo";

case (greet) {
	of "hi" {
		fmt->log("is in hi!");
		break;
	}

	of "hello" {
		fmt->log("is in hello");
		break;
	}
	
	default {
		fmt->log("Is Default Test!");
		return 10;
	}
};
